#!/usr/bin/tclsh

package require Itcl

package require tcltest
namespace import tcltest::*

package require OOSupport
namespace import OOSupport::*

#
# PREAMBLE
#

::itcl::class Vertex {

    common attributes {
        {number x null rw}
        {number y null rw}
        {number z null rw}
    }

    method constructor {x y z} {
        init_attributes

        set _x $x
        set _y $y
        set _z $z
    }

    bless_attributes -json_support
}

::itcl::class Triangle {

    common attributes {
        {::Vertex v1 null rw}
        {::Vertex v2 null rw}
        {::Vertex v3 null rw}
    }

    method constructor {v1 v2 v3} {
        init_attributes

        set _v1 $v1
        set _v2 $v2
        set _v3 $v3
    }

    bless_attributes -json_support
}

::itcl::class 3DMesh {

    common attributes {
        {[::Triangle] triangles {} rw}
    }

    method constructor {} {
        init_attributes
    }

    bless_attributes -json_support
}

#
# TEST CASES
#

set 3DMESH_JSON \
{{
	"triangles":
	[
			{
				"v1":
						{
							"x": 0.0,
							"y": 0.0,
							"z": 0.0
						},
				"v2":
						{
							"x": 1.0,
							"y": 1.0,
							"z": 0.0
						},
				"v3":
						{
							"x": 0.0,
							"y": 1.0,
							"z": 0.0
						}
			},
			{
				"v1":
						{
							"x": 0.0,
							"y": 0.0,
							"z": 0.0
						},
				"v2":
						{
							"x": 1.0,
							"y": 0.0,
							"z": 0.0
						},
				"v3":
						{
							"x": 1.0,
							"y": 1.0,
							"z": 0.0
						}
			}
	]
}}

test ut_oosupport_3dmesh_to_json {
    Test JSON serialization of composed objects
} {
    -result 0
    -setup {
        set v1 [::itcl::code [Vertex #auto 0.0 0.0 0.0]]
        set v2 [::itcl::code [Vertex #auto 1.0 1.0 0.0]]
        set v3 [::itcl::code [Vertex #auto 0.0 1.0 0.0]]
        set v4 [::itcl::code [Vertex #auto 1.0 0.0 0.0]]

        set t1 [::itcl::code [Triangle #auto $v1 $v2 $v3]]
        set t2 [::itcl::code [Triangle #auto $v1 $v4 $v2]]

        set mesh [3DMesh #auto]
        $mesh set_triangles [list $t1 $t2]
    }
    -body {
        if {[$mesh to_json] != $3DMESH_JSON} {
            error "error in JSON"
        }

        return 0
    }
}

