#!/usr/bin/env tclsh
#
# Caius Functional Testing Framework
#
# Copyright (c) 2013, Tobias Koch <tobias.koch@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modifi-
# cation, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
# NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUD-
# ING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUD-
# ING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFT-
# WARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

package require Caius
package require Error

proc version_info {} {
    puts "Caius Test Execution and Reporting Tool                              "
    puts "Copyright (c) 2014, Tobias Koch <tobias.koch@gmail.com>              "
}

proc usage {} {
    version_info
    puts "                                                                     "
    puts "Usage: caius <command> \[OPTIONS] \[PARAMS]                          "
    puts "                                                                     "
    puts "Available commands:                                                  "
    puts "                                                                     "
    puts "  report                                                             "
    puts "  run                                                                "
    puts "  runplan                                                            "
    puts "                                                                     "
    puts "Type 'caius <command> --help' for command-specific usage information."
    puts "                                                                     "
}

### MAIN ###

set command [lindex $::argv 0]

switch $command {
    report {
        set executor [::Caius::Reporter #auto]
    }
    run {
        set executor [::Caius::Runner #auto]
    }
    runplan {
        set executor [::Caius::Testplan #auto]
    }
    --help -
    default {
        usage

        if {$command eq {--help}} {
            exit 0
        }

        exit 1
    }
}

except {
    exit [$executor execute [lrange $::argv 1 end]]
} e {
    ::Exception {
        puts stderr "caius $command: [$e msg]"
        exit 1
    }
}

